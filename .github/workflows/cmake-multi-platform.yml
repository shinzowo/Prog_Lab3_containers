name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    permissions: write-all

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc]
        cpp_compiler: [g++]
        include:
          - os: windows-latest
            os_short: win64
            generator: -G "MinGW Makefiles"
            cpack_type: zip
          - os: ubuntu-latest
            os_short: linux
            cpack_type: deb

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install MinGW
        if: matrix.os == 'windows-latest'
        run: |
          choco install mingw
          echo "C:/mingw64/bin" >> $env:GITHUB_PATH
          gcc --version
          g++ --version

      - name: Configure CMake
        run: >
          cmake -B build
          ${{ matrix.generator }}
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: |
          cmake --build build --config ${{ matrix.build_type }}
          cmake --build build --target package --config ${{ matrix.build_type }}

      - name: Test
        run: |
          cd build
          ctest --build-config ${{ matrix.build_type }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}-${{ matrix.os_short }}
          release_name: Release ${{ github.run_number }}-${{ matrix.os_short }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./containers-0.1.0-${{ matrix.os_short }}.${{ matrix.cpack_type }}
          asset_name: containers-0.1.0-${{ matrix.os_short }}.${{ matrix.cpack_type }}
          asset_content_type: application/${{ matrix.cpack_type }}


    

